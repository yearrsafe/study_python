
"""
# IPO

## 输出函数print

1.格式：print(内容，内容，内容，……，sep=‘ ’，end=’\n’,file=None)

sep:分隔符，默认情况为表示多个内容之间用空格分隔，修改后会在每个内容后分隔

end:结束标志，意味着当print函数输出完成后，会自动在后边加入end的内容

file：打开的文件，在写入文件的时候会用

对引号类型不做要求

**在内容之间添加”，“才能触发分隔符。当内容是字符串时，如果没有”，“，会自动进行拼接，也就是说，没有逗号的话，两个双引号包含的字符串会被视作一个双引号。**

2.ASCII码的使用

字符转ASCII码用内置函数ord(),ASCII码转字符用内置函数chr()；

例：print(chr(99)) 输出c      print（ord(’C’))  输出67

支持中文转码

## 输入函数input

1.格式：a=input(注释)

a:变量名，默认为字符串

注释：根据输入内容对用户的提示

## 注释：

单行注释用井号（相当于c中的//），多行注释是三引号（’‘’ ‘’’）（相当于c中的/* */）

中文文档注释卸写在第一行，格式示例：coding=utf-8

## 打开与关闭文件

1.打开文件:file=open(”filename”,mode,encoding=)

mode:打开方式，如w、r、r+、w+等

enconding：编码方式，可省略

2.关闭文件：file.close()

3.with语句：自动关闭文件

with open("example.txt", "r", encoding="utf-8") as file:
    content = file.read()
    print(content)
"""



"""
# 保留字与标识符

1.保留字：35个，引入keyword，使用print(keyword.kwlist)查看，不能用保留字作变量名

2.标识符：变量名，与c规则相同

# 变量与常量

1.变量：可动态修改变量的数据类型

查看变量的内存地址使用id()函数

2.常量：用大写字母表示，python中可以定义常量

# 数值类型

1.整数：不可变型数据

可以定义变量为不同进制的整数（0b二进制，0o八进制，0x十六进制)，输出都是十进制

2.浮点型数：不可变型数据

会出现尾数增加错误的情况，可以使用round(表达式\变量，x)函数进行保留小数位数（x代表保留的小数位数）

3.复数

复数单位为j（不是i），其中，real代表复数的实部，imag代表复数的虚部（x.imag）——x代表变量名

# 字符串类型

1.字符串的定义：

使用单引号/双引号/三引号进行定义，是不可变型数据。其中，三引号是定义多行字符串时使用

2.转义字符：

与c相似，取消转义需要在字符串之前加r/R

在转义字符前加/会取消单个转义，在引号前加r会取消引号内所有转义字符

3.字符串的切片与索引

与字符串数组类似。

索引：x[5]，表示从左往右第6位；x[-5]，表示从右往左第5位。（x可替换为引号的内容）

切片：x[2:5]，表示从左往右从第3个字符到第6个；如果x[:5]是从开头到第六位;x[1:]表示从第二个   字符到末尾

4.常见运算操作

x+y：将两个字符串连接，没有空格

n*x/x*n：将x复制n次

x in y:若x是y的子串，返回True，否则返回False

# 布尔类型

    表示真(True)和假(False)的数据类型，其中True表示1，False代表0

     表示Flase的情况：

1.字符串为False或者是None

2.数值中的0，包括0.0，虚部0等

3.空字符串，空集，空列表等

     

# 数据类型转换

### 显示转换

1.浮点型转整型：int(x) x是浮点型数据，只保留x的整数部分

2.整型转浮点型：float(x) x是整型数据，只会保留一位小数

3.字符串转整型：int(”x”) x是整形数据，只有整形数据能被转换

4.ord()和chr()

ord()找ASCII码，括号内是字符；chr()找字符，括号内是ASCII码

5.进制转换

十六进制：hex()；八进制：oct()；二进制:bin()。括号内是十进制的整型数字
 print(int(c, base=16))       # str类型的'123'按十六进制转成int，输出291

### 隐式转换

在变量使用的过程中自动转换

# eval()函数

    将字符串的引号去掉，执行字符串内容的操作。

    通常与input()函数连用（input输入的是字符串，eval函数能够将输入内容数据类型转换为其他类型）

    eval()函数是去除字符串中的引号，如果括号内是输入的字符串，去掉括号后会变成常量，无法转换

    eval函数可以把字符串转换为字符串，前提是该字符串是被定义的变量

![image.png](attachment:7f3ecf51-8282-4ada-8a2b-f3c29a3a50a4:image.png)

# 逻辑运算符

逻辑运算符有三个，分别是`and`、`or`和`not`（与、或、非）

特性：

    如果`and`运算符左边的布尔值是`False`，不管右边的布尔值是什么，最终的结果都是  `False`，这时运算符右边的布尔值会被跳过

    `or`运算符也是有短路功能的，当它左边的布尔值为`True`的情况下，右边的布尔值会被短路（如果`or`右边是一个表达式，那么这个表达式不会执行）

与c的区别：

    `not`运算符的后面可以跟一个布尔值，如果`not`后面的布尔值或表达式是`True`，那么运算的结果就是`False`；如果`not`后面的布尔值或表达式是`False`，那么运算的结果就是`True`。
    """









"""
判断变量的数据类型：
type()方法
数据类型转换：
    推荐使用int(),float()，str()语句显示转换；浮点数转整数是丢失小数
标识符命名：
    只能出现英文、数字、下划线；数字不能开头；区分大小写；不能使用关键字
算数运算符：
    加减乘除是一样的，整除是//，取余是%，幂是**


字符串定义方式：单引号、双引号、三引号
字符串拼接：
    str1+str2           （用+拼接）      该方法只能拼接字符串，不能和其他类型拼接
格式化字符串：
    1. "str1 %s" %str2     其中，str2可以表示字符串，也可以表示数字；多个变量占位时，只要一个%，多个变量按顺序括号扩起来
    2.f"内容{变量}，内容{变量}"      缺点是变量不能限制精度和宽度
    3.其中，str2、变量都可以被表达式（如语句、数学运算式）所代替
字符串：
    字符串又称为有序的字符序列，对某个字符的检索又称为索引
    其中，对字符串中的某个子串或者区间的检索称为切片
    字符串的索引是从0开始,从左往右是正数，从右往左为负数，从右往左的索引的最后一位是-1不是0
    切片：str[2:7]/str[-7:-3]



数字精度控制
    %m.n        其中，m是宽度限制，n是精度限制；m>0，从左开始补空格；

输入控制：input()函数
    其中，输入内容会被当作字符串，需要强转得到合适数据类型
输出控制：print()函数
    结尾会自动加一个\n，可以在内容加\n进行手动换行
    如果在开头手动加r/R，会使转义字符失效，例如：print(r"北\n京\n")    会输出北\n京\n



"""




